{"version":3,"sources":["components/TodoInputBar.js","components/Todo.js","components/TodoList.js","components/Statistic.js","App.js","index.js"],"names":["TodoInputBar","_ref","inputText","setInputText","todos","setTodos","setStatus","disableInputButton","setCounter","counter","react_default","a","createElement","className","value","onChange","e","target","type","placeholder","onClick","preventDefault","counterCreated","counterUpdated","counterDeleted","concat","Object","toConsumableArray","text","id","Math","random","completed","edit","disableButtons","disabled","fetch","then","response","json","getTodos","map","item","objectSpread","isCompleted","Todo","todo","setEditText","editText","setDisableInputButton","indexOf","slice","splice","length","defaultValue","filter","el","TodoList","completedTodos","components_Todo","key","Statistic","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","status","_useState7","_useState8","setCompletedTodos","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","counterLocal","components_TodoInputBar","components_Statistic","components_TodoList","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.35a122c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../App.css';\r\n\r\nfunction TodoInputBar({ inputText, setInputText, todos, setTodos, setStatus,\r\n    disableInputButton, setCounter, counter }) {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setCounter({\r\n            counterCreated: counter.counterCreated + 1,\r\n            counterUpdated: counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted,\r\n        })\r\n        setTodos([\r\n            ...todos,\r\n            {\r\n                text: inputText,\r\n                id: Math.random() * 1000,\r\n                completed: false,\r\n                edit: false,\r\n                disableButtons: false,\r\n            }\r\n        ]);\r\n        setInputText(\"\");\r\n    }\r\n\r\n    const handleClearTodos = (e) => {\r\n        e.preventDefault();\r\n        // const isClear = confirm('sx');\r\n        // alert( isClear );\r\n        setTodos([]);\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    const handleFetchTodos = (e) => {\r\n        e.preventDefault();\r\n        let url = 'https://gist.githubusercontent.com/alexandrtovmach/0c8a29b734075864727228c559fe9f96/raw/c4e4133c9658af4c4b3474475273b23b4a70b4af/todo-task.json'\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(getTodos => {\r\n                // Change todos from server:\r\n                // setTodos(getTodos.map(item => {\r\n                //     return {\r\n                //         ...item,\r\n                //         text: item.text,\r\n                //         id: item.id,\r\n                //         completed: item.isCompleted,\r\n                //         edit: false,\r\n                //         disableButtons: false,\r\n                //     }\r\n                // }))\r\n\r\n                setTodos([\r\n                    ...todos,\r\n                    ...getTodos.map(item => {\r\n                        return {\r\n                            ...item,\r\n                            text: item.text,\r\n                            id: Math.random() * 1000,\r\n                            completed: item.isCompleted,\r\n                            edit: false,\r\n                            disableButtons: false,\r\n                        }\r\n                    })\r\n                ])\r\n\r\n            });\r\n    }\r\n\r\n    return (\r\n        <form className=\"todoInputForm\">\r\n            <div>\r\n                <input\r\n                    className=\"inputBar\"\r\n                    value={inputText}\r\n                    onChange={inputTextHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"type you task...\"\r\n                />\r\n                <button\r\n                    className=\"inputButton\"\r\n                    onClick={submitHandler}\r\n                    type=\"submit\"\r\n                    disabled={disableInputButton}\r\n                >\r\n                    +\r\n                </button>\r\n            </div>\r\n            <div className=\"buttons\">\r\n                <button\r\n                    onClick={handleFetchTodos}\r\n                    className=\"getButton\"\r\n                >\r\n                    add from server\r\n                </button>\r\n                <button\r\n                    onClick={handleClearTodos}\r\n                    className=\"getButton\"\r\n                >\r\n                    clear all\r\n                </button>\r\n\r\n                <div >\r\n                    <select className=\"select\" onChange={statusHandler}>\r\n                        <option>All</option>\r\n                        <option>Completed</option>\r\n                        <option>Uncompleted</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoInputBar;","import React from \"react\";\r\n\r\nfunction Todo({ text, todos, setTodos, todo, setEditText, editText,\r\n    setDisableInputButton, disableInputButton, setCounter, counter }) {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n        setCounter({\r\n            counterCreated: counter.counterCreated,\r\n            counterUpdated: counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted + 1,\r\n        })\r\n\r\n    }\r\n\r\n    const completedHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        setEditText(todo.text);\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item,\r\n                    edit: !item.edit,\r\n                    text: todo.edit ? editText : todo.text,\r\n                }\r\n            }\r\n            if (item.id !== todo.id) {\r\n                return {\r\n                    ...item,\r\n                    disableButtons: !item.disableButtons,\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n        setDisableInputButton(!disableInputButton);\r\n        setCounter({\r\n            counterCreated: counter.counterCreated,\r\n            counterUpdated: todo.edit ? counter.counterUpdated + 1 : counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted,\r\n        });\r\n\r\n    }\r\n\r\n    const inputEditTextHandler = (e) => {\r\n        setEditText(e.target.value);\r\n    }\r\n\r\n    const handleTodoMoveUp = () => {\r\n        if (todos.indexOf(todo) > 0) {\r\n            setTodos(todos.slice(\r\n                todos.splice(\r\n                    (todos.indexOf(todo) - 1), 2,\r\n                    todos[todos.indexOf(todo)],\r\n                    todos[todos.indexOf(todo) - 1]\r\n                )\r\n            ));\r\n        }\r\n    }\r\n\r\n    const handleTodoMoveDown = () => {\r\n        if (todos.indexOf(todo) < todos.length - 1) {\r\n            setTodos(todos.slice(\r\n                todos.splice(\r\n                    (todos.indexOf(todo)), 2,\r\n                    todos[todos.indexOf(todo) + 1],\r\n                    todos[todos.indexOf(todo)]\r\n                )\r\n            ));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <div className=\"todoUpDownButtons\" >\r\n                <button\r\n                    className=\"todoUpDownButton rotate\"\r\n                    onClick={handleTodoMoveUp}\r\n                >\r\n                    <b>v</b>\r\n                </button>\r\n                <button\r\n                    className=\"todoUpDownButton\"\r\n                    onClick={handleTodoMoveDown}\r\n                >\r\n                    <b>v</b>\r\n                </button>\r\n            </div>\r\n            {\r\n                todo.edit ?\r\n                    <input\r\n                        className=\"todoEditInput\"\r\n                        type=\"text\"\r\n                        defaultValue={text}\r\n                        onChange={inputEditTextHandler}\r\n                    /> :\r\n                    <li className={todo.completed ? \"todoCompleted\" : \"\"}>{text}</li>\r\n            }\r\n\r\n            <button\r\n                className={todo.disableButtons || todo.edit ? \"todoButtonDisabled\" : \"doneTodoButton\"}\r\n                onClick={completedHandler}\r\n                disabled={todo.disableButtons || todo.edit}>\r\n                <b>V</b>\r\n            </button>\r\n            <button className={todo.disableButtons || todo.edit ? \"todoButtonDisabled\" : \"delTodoButton\"}\r\n                onClick={deleteHandler}\r\n                disabled={todo.disableButtons || todo.edit}>\r\n                <b>X</b>\r\n            </button>\r\n            <button className={todo.disableButtons ? \"editTodoButtonDisabled\" : \"editTodoButton\"}\r\n                onClick={handleEditClick}\r\n                disabled={todo.disableButtons}>\r\n                <b>{todo.edit ? 'save' : 'edit'}</b>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList({\r\n    todos, setTodos, completedTodos, setEditText, editText, \r\n    setDisableInputButton, disableInputButton, setCounter, counter }) {\r\n    return (\r\n        <div>\r\n            <ul className=\"todo-list\">\r\n                {completedTodos.map((todo) => (\r\n                    <Todo\r\n                        text={todo.text}\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                        setEditText={setEditText}\r\n                        editText={editText}\r\n                        setDisableInputButton={setDisableInputButton}\r\n                        disableInputButton={disableInputButton}\r\n                        setCounter={setCounter}\r\n                        counter={counter}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import React from \"react\";\r\n\r\nfunction Statistic({ counter }) {\r\n    return (\r\n        <div>\r\n            <b>Statistic: </b>\r\n            {/* created: {counter[0]};\r\n            updated: {counter[1]};\r\n            deleted: {counter[2]}; */}\r\n            created: {counter.counterCreated};\r\n            updated: {counter.counterUpdated};\r\n            deleted: {counter.counterDeleted};\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistic;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n// import components\r\nimport TodoInputBar from './components/TodoInputBar';\r\nimport TodoList from './components/TodoList';\r\nimport Statistic from './components/Statistic';\r\n\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"All\");\r\n  const [completedTodos, setCompletedTodos] = useState([]);\r\n  const [editText, setEditText] = useState('');\r\n  const [disableInputButton, setDisableInputButton] = useState(false);\r\n  const [counter, setCounter] = useState({\r\n    counterCreated: 0,\r\n    counterUpdated: 0,\r\n    counterDeleted: 0,\r\n  })\r\n\r\n\r\n  //RUN ONCE when the app starts\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case \"Completed\":\r\n        setCompletedTodos(todos.filter(item => item.completed === true));\r\n        break;\r\n      case \"Uncompleted\":\r\n        setCompletedTodos(todos.filter(item => item.completed === false));\r\n        break;\r\n      default:\r\n        setCompletedTodos(todos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Save to local\r\n  // 01:23:00\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    localStorage.setItem(\"counter\", JSON.stringify(counter));\r\n  };\r\n\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoLocal);\r\n    }\r\n\r\n    if (localStorage.getItem(\"counter\") === null) {\r\n      localStorage.setItem(\"counter\", JSON.stringify({}));\r\n    } else {\r\n      let counterLocal = JSON.parse(localStorage.getItem(\"counter\"));\r\n      setCounter(counterLocal);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1 className=\"head\">\r\n          Artem's Todo App\r\n        </h1>\r\n      </header>\r\n      <TodoInputBar\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        setStatus={setStatus}\r\n        disableInputButton={disableInputButton}\r\n        setCounter={setCounter}\r\n        counter={counter}\r\n      />\r\n      <Statistic\r\n        counter={counter}\r\n        setCounter={setCounter}\r\n      />\r\n      <TodoList\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        completedTodos={completedTodos}\r\n        setEditText={setEditText}\r\n        editText={editText}\r\n        setDisableInputButton={setDisableInputButton}\r\n        disableInputButton={disableInputButton}\r\n        setCounter={setCounter}\r\n        counter={counter}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n);\n\n"],"sourceRoot":""}