{"version":3,"sources":["components/TodoInputBar.js","components/Todo.js","components/TodoList.js","components/Statistic.js","App.js","index.js"],"names":["TodoInputForm","styled","div","_templateObject","Object","taggedTemplateLiteral","InputTodoBar","input","_templateObject2","AddTodoButton","button","_templateObject3","OptionButtonsWrapper","_templateObject4","OptionButtons","_templateObject5","AddFromServerButton","_templateObject6","ClearAllButton","_templateObject7","FilterTodoSelector","select","_templateObject8","TodoInputBar","_ref","inputText","setInputText","todos","setTodos","setStatus","disableInputButton","setCounter","counter","react_default","a","createElement","value","onChange","e","target","type","placeholder","onClick","preventDefault","counterCreated","counterUpdated","counterDeleted","concat","toConsumableArray","text","id","Math","random","completed","edit","disableButtons","colorId","round","disabled","fetch","then","response","json","getTodos","map","item","isCompleted","floor","TodoLine","Todo_templateObject","UpDownTodoButtonsWrapper","Todo_templateObject2","DownTodoButton","Todo_templateObject3","UpTodoButton","Todo_templateObject4","TodoTextArea","li","Todo_templateObject5","props","randColor","TodoButtons","Todo_templateObject6","DoneTodoButton","Todo_templateObject7","disabledTheme","DelTodoButton","Todo_templateObject8","EditTodoButton","_templateObject9","TodoEditInput","_templateObject10","Todo","todo","setEditText","editText","setDisableInputButton","indexOf","slice","splice","length","defaultValue","objectSpread","filter","el","TodoListWrapper","ul","TodoList_templateObject","TodoList","completedTodos","components_Todo","key","StatisticBar","Statistic_templateObject","Statistic","Head","h1","App_templateObject","AppWrapper","App_templateObject2","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","status","_useState7","_useState8","setCompletedTodos","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","counterLocal","components_TodoInputBar","components_Statistic","components_TodoList","className","Global","createGlobalStyle","src_templateObject","ReactDOM","createRoot","document","getElementById","render","Fragment","src_App"],"mappings":"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","file":"static/js/main.341ad849.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport '../App.css';\r\n\r\n//Style:\r\nconst TodoInputForm = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n    border: none;\r\n`\r\nconst InputTodoBar = styled.input`\r\n    font-size: 1.2rem;\r\n    margin-bottom: 10px;\r\n    padding-left: 10px;\r\n    width: 400px;\r\n    height: 40px;\r\n    border-style: none;\r\n    border-radius: 5px 0 0 5px;\r\n    /* border: none; */\r\n    background-color: white;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\nconst AddTodoButton = styled.button`\r\n    font-size: 1.2rem;\r\n    /* line-height: 0; */\r\n    padding: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: rgb(255, 175, 25);\r\n    /* border: rgb(252, 218, 155) solid 1px; */\r\n    border: none;\r\n    border-radius: 0 5px 5px 0;\r\n    color: rgb(130, 130, 130);\r\n    cursor: pointer;\r\n`\r\nconst OptionButtonsWrapper = styled.div`\r\n    display: flex;\r\n`\r\nconst OptionButtons = styled.button`\r\n    font-size: 1rem;\r\n    margin-right: 5px;\r\n    width: 80px;\r\n    height: 40px;\r\n    background-color: rgb(253, 197, 93);\r\n    border-radius: 5px;\r\n    /* border: rgb(252, 218, 155) solid 1px; */\r\n    border: none;\r\n    color: rgb(130, 130, 130);\r\n    cursor: pointer;\r\n`\r\nconst AddFromServerButton = styled(OptionButtons)``\r\nconst ClearAllButton = styled(OptionButtons)``\r\nconst FilterTodoSelector = styled.select`\r\n    font-size: 1.2rem;\r\n    padding: 0.4rem;\r\n    margin-right: 5px;\r\n    height: 40px;\r\n    color: rgb(130, 130, 130);\r\n    background-color: rgb(253, 197, 93);\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\nfunction TodoInputBar({ inputText, setInputText, todos, setTodos, setStatus,\r\n    disableInputButton, setCounter, counter }) {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setCounter({\r\n            counterCreated: counter.counterCreated + 1,\r\n            counterUpdated: counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted,\r\n        })\r\n        setTodos([\r\n            ...todos,\r\n            {\r\n                text: inputText,\r\n                id: Math.random() * 1000,\r\n                completed: false,\r\n                edit: false,\r\n                disableButtons: false,\r\n                colorId: Math.round(Math.random() * 10),\r\n            }\r\n        ]);\r\n        setInputText(\"\");\r\n    }\r\n\r\n    const handleClearTodos = (e) => {\r\n        e.preventDefault();\r\n        setTodos([]);\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    const handleFetchTodos = (e) => {\r\n        e.preventDefault();\r\n        let url = 'https://gist.githubusercontent.com/alexandrtovmach/0c8a29b734075864727228c559fe9f96/raw/c4e4133c9658af4c4b3474475273b23b4a70b4af/todo-task.json'\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(getTodos => {\r\n                setTodos([\r\n                    ...todos,\r\n                    ...getTodos.map(item => {\r\n                        return {\r\n                            text: item.text,\r\n                            id: Math.random() * 1000,\r\n                            completed: item.isCompleted,\r\n                            edit: false,\r\n                            disableButtons: false,\r\n                            colorId: Math.floor(Math.random() * 10),\r\n                        }\r\n                    })\r\n                ])\r\n            });\r\n    }\r\n\r\n    return (\r\n        <TodoInputForm>\r\n            <div>\r\n                <InputTodoBar\r\n                    value={inputText}\r\n                    onChange={inputTextHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"type you task...\"\r\n                />\r\n                <AddTodoButton\r\n                    onClick={submitHandler}\r\n                    type=\"submit\"\r\n                    disabled={disableInputButton}\r\n                >\r\n                    +\r\n                </AddTodoButton>\r\n            </div>\r\n            <OptionButtonsWrapper>\r\n                <AddFromServerButton onClick={handleFetchTodos}>\r\n                    add from server\r\n                </AddFromServerButton>\r\n                <ClearAllButton onClick={handleClearTodos}>\r\n                    clear all\r\n                </ClearAllButton>\r\n                <FilterTodoSelector onChange={statusHandler}>\r\n                    <option>All</option>\r\n                    <option>Completed</option>\r\n                    <option>Uncompleted</option>\r\n                </FilterTodoSelector>\r\n            </OptionButtonsWrapper>\r\n        </TodoInputForm>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoInputBar;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\n//Style:\r\nconst TodoLine = styled.div`\r\n    display: flex;\r\n    padding: 0.5rem 0;\r\n    font-size: 1.2rem;\r\n    border-style: none;\r\n`\r\nconst UpDownTodoButtonsWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst DownTodoButton = styled.button`\r\n    font-size: 1rem;\r\n    width: 2.2rem;\r\n    height: 1rem;\r\n    background-color: rgb(155, 218, 255);\r\n    border: rgb(252, 218, 155) solid;\r\n    border-width: 1px 0 1px 0;\r\n    border-radius: 5px;\r\n    color: rgb(120, 120, 120);\r\n    cursor: pointer;\r\n    line-height: 2px;\r\n`\r\nconst UpTodoButton = styled(DownTodoButton)`\r\n    transform: rotate(180deg);\r\n`\r\nconst TodoTextArea = styled.li`\r\n    padding: 0.3rem;\r\n    margin: 0 5px;\r\n    width: 400px;\r\n    list-style-type: none;\r\n    text-align: left;\r\n    font-size: 1.2rem;\r\n    border-radius: 5px;\r\n    text-decoration-line: ${props => props.completed ? 'line-through' : 'none'};\r\n    ${'' /* color: ${props => props.completed ? 'rgb(180, 180, 180)' : 'black'}; */}\r\n    ${'' /* background-color: ${props => props.completed ? 'rgb(180, 255, 212)' : 'white'}; */}\r\n    background-color: ${props => {\r\n        switch (props.randColor) {\r\n            case 0: return \"#FFE4C4\";\r\n            case 1: return \"#FFDEAD\";\r\n            case 2: return \"#DEB887\";\r\n            case 3: return \"#BC8F8F\"; //font-white\r\n            case 4: return \"#DAA520\";\r\n            case 5: return \"#B8860B\";\r\n            case 6: return \"#D2691E\";\r\n            case 7: return \"#8B4513\";\r\n            case 8: return \"#A0522D\";\r\n            case 9: return \"#A52A2A\";\r\n        }\r\n    }};\r\n    color: ${props => {\r\n        switch (props.randColor) {\r\n            case 0: return \"black\";\r\n            case 1: return \"black\";\r\n            case 2: return \"black\";\r\n            case 3: return \"white\"; //font-white\r\n            case 4: return \"white\";\r\n            case 5: return \"white\";\r\n            case 6: return \"white\";\r\n            case 7: return \"white\";\r\n            case 8: return \"white\";\r\n            case 9: return \"white\";\r\n        }\r\n    }};\r\n\r\n`\r\nconst TodoButtons = styled.button`\r\n    font-size: 1rem;\r\n    width: 2.2rem;\r\n    height: 2rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    margin-right: 2px;\r\n`\r\nconst DoneTodoButton = styled(TodoButtons)`\r\n    color: ${props => props.disabledTheme ? 'rgb(180, 180, 180)' : 'rgb(120, 120, 120)'};\r\n    background-color: ${props => props.disabledTheme ? 'rgb(230, 230, 230)' : 'rgb(100, 255, 212)'};\r\n    \r\n`\r\nconst DelTodoButton = styled(TodoButtons)`\r\n    color: ${props => props.disabledTheme ? 'rgb(180, 180, 180)' : 'rgb(120, 120, 120)'};\r\n    background-color: ${props => props.disabledTheme ? 'rgb(230, 230, 230)' : 'rgb(255, 144, 100)'};\r\n\r\n`\r\nconst EditTodoButton = styled(TodoButtons)`\r\n    width: 3rem;\r\n    color: ${props => props.disabledTheme ? 'rgb(180, 180, 180)' : 'rgb(120, 120, 120)'};\r\n    background-color: ${props => props.disabledTheme ? 'rgb(230, 230, 230)' : 'rgb(255, 175, 25)'};\r\n`\r\n\r\nconst TodoEditInput = styled.input`\r\n    padding: 0.3rem;\r\n    margin: 0 5px;\r\n    width: 400px;\r\n    height: 32px;\r\n    font-size: 1.2rem;\r\n    border-style: dotted;\r\n    border-width: 1.8px;\r\n    border-radius: 5px;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\nconst Todo = ({ text, todos, setTodos, todo, setEditText, editText,\r\n    setDisableInputButton, disableInputButton, setCounter, counter }) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n        setCounter({\r\n            counterCreated: counter.counterCreated,\r\n            counterUpdated: counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted + 1,\r\n        })\r\n\r\n    }\r\n\r\n    const completedHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        setEditText(todo.text);\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item,\r\n                    edit: !item.edit,\r\n                    text: todo.edit ? editText : todo.text,\r\n                }\r\n            }\r\n            if (item.id !== todo.id) {\r\n                return {\r\n                    ...item,\r\n                    disableButtons: !item.disableButtons,\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n        setDisableInputButton(!disableInputButton);\r\n        setCounter({\r\n            counterCreated: counter.counterCreated,\r\n            counterUpdated: todo.edit ? counter.counterUpdated + 1 : counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted,\r\n        });\r\n\r\n    }\r\n\r\n    const inputEditTextHandler = (e) => {\r\n        setEditText(e.target.value);\r\n    }\r\n\r\n    const handleTodoMoveUp = () => {\r\n        if (todos.indexOf(todo) > 0) {\r\n            setTodos(todos.slice(\r\n                todos.splice(\r\n                    (todos.indexOf(todo) - 1), 2,\r\n                    todos[todos.indexOf(todo)],\r\n                    todos[todos.indexOf(todo) - 1]\r\n                )\r\n            ));\r\n        }\r\n    }\r\n\r\n    const handleTodoMoveDown = () => {\r\n        if (todos.indexOf(todo) < todos.length - 1) {\r\n            setTodos(todos.slice(\r\n                todos.splice(\r\n                    (todos.indexOf(todo)), 2,\r\n                    todos[todos.indexOf(todo) + 1],\r\n                    todos[todos.indexOf(todo)]\r\n                )\r\n            ));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TodoLine>\r\n            <UpDownTodoButtonsWrapper>\r\n                <UpTodoButton onClick={handleTodoMoveUp}>\r\n                    <b>v</b>\r\n                </UpTodoButton>\r\n                <DownTodoButton onClick={handleTodoMoveDown}>\r\n                    <b>v</b>\r\n                </DownTodoButton>\r\n            </UpDownTodoButtonsWrapper>\r\n            {\r\n                todo.edit ?\r\n                    <TodoEditInput\r\n                        type=\"text\"\r\n                        defaultValue={text}\r\n                        onChange={inputEditTextHandler}\r\n                    /> :\r\n                    //<li className={todo.completed ? \"todoCompleted\" : \"\"}>{text}</li>\r\n                    <TodoTextArea\r\n                        completed={todo.completed}\r\n                        randColor={todo.colorId}\r\n                    >\r\n                        {text}\r\n                    </TodoTextArea>\r\n            }\r\n            <DoneTodoButton\r\n                onClick={completedHandler}\r\n                disabled={todo.disableButtons || todo.edit}\r\n                disabledTheme={todo.disableButtons || todo.edit}>\r\n                <b>V</b>\r\n            </DoneTodoButton>\r\n\r\n            <DelTodoButton\r\n                onClick={deleteHandler}\r\n                disabled={todo.disableButtons || todo.edit}\r\n                disabledTheme={todo.disableButtons || todo.edit}>\r\n                <b>X</b>\r\n            </DelTodoButton>\r\n\r\n            <EditTodoButton\r\n                onClick={handleEditClick}\r\n                disabled={todo.disableButtons}\r\n                disabledTheme={todo.disableButtons}>\r\n                <b>{todo.edit ? 'save' : 'edit'}</b>\r\n            </EditTodoButton>\r\n\r\n        </TodoLine>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from './Todo'\r\nimport styled from 'styled-components';\r\n\r\nconst TodoListWrapper = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: left;\r\n    padding: 0;\r\n    margin: 10px 0;\r\n`\r\n\r\nfunction TodoList({\r\n    todos, setTodos, completedTodos, setEditText, editText, \r\n    setDisableInputButton, disableInputButton, setCounter, counter }) {\r\n    return (\r\n        <div>\r\n            <TodoListWrapper>\r\n                {completedTodos.map((todo) => (\r\n                    <Todo\r\n                        text={todo.text}\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                        setEditText={setEditText}\r\n                        editText={editText}\r\n                        setDisableInputButton={setDisableInputButton}\r\n                        disableInputButton={disableInputButton}\r\n                        setCounter={setCounter}\r\n                        counter={counter}\r\n                    />\r\n                ))}\r\n            </TodoListWrapper>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StatisticBar = styled.div`\r\n  color: rgb(130, 130, 130);\r\n`\r\n\r\nfunction Statistic({ counter }) {\r\n    return (\r\n        <StatisticBar>\r\n            <b>Statistic: </b>\r\n            {/* created: {counter[0]};\r\n            updated: {counter[1]};\r\n            deleted: {counter[2]}; */}\r\n            created: {counter.counterCreated};\r\n            updated: {counter.counterUpdated};\r\n            deleted: {counter.counterDeleted};\r\n        </StatisticBar>\r\n    )\r\n}\r\n\r\nexport default Statistic;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport './App.css';\r\n// import components\r\nimport TodoInputBar from './components/TodoInputBar';\r\nimport TodoList from './components/TodoList';\r\nimport Statistic from './components/Statistic';\r\n\r\n//Style:\r\nconst Head = styled.h1`\r\n  color: rgb(255, 255, 255);\r\n  font-size: 3rem;\r\n  margin: 30px 0px 30px;\r\n`\r\nconst AppWrapper = styled.div`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  background-color: rgb(252, 218, 155);\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"All\");\r\n  const [completedTodos, setCompletedTodos] = useState([]);\r\n  const [editText, setEditText] = useState('');\r\n  const [disableInputButton, setDisableInputButton] = useState(false);\r\n  const [counter, setCounter] = useState({\r\n    counterCreated: 0,\r\n    counterUpdated: 0,\r\n    counterDeleted: 0,\r\n  })\r\n\r\n\r\n  //RUN ONCE when the app starts\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case \"Completed\":\r\n        setCompletedTodos(todos.filter(item => item.completed === true));\r\n        break;\r\n      case \"Uncompleted\":\r\n        setCompletedTodos(todos.filter(item => item.completed === false));\r\n        break;\r\n      default:\r\n        setCompletedTodos(todos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Save to local\r\n  // 01:23:00\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    localStorage.setItem(\"counter\", JSON.stringify(counter));\r\n  };\r\n\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoLocal);\r\n    }\r\n\r\n    if (localStorage.getItem(\"counter\") === null) {\r\n      localStorage.setItem(\"counter\", JSON.stringify({}));\r\n    } else {\r\n      let counterLocal = JSON.parse(localStorage.getItem(\"counter\"));\r\n      setCounter(counterLocal);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <AppWrapper>\r\n      <header>\r\n        <Head>\r\n          Artem's Todo App\r\n        </Head>\r\n      </header>\r\n      <TodoInputBar\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        setStatus={setStatus}\r\n        disableInputButton={disableInputButton}\r\n        setCounter={setCounter}\r\n        counter={counter}\r\n      />\r\n      <Statistic\r\n        counter={counter}\r\n        setCounter={setCounter}\r\n      />\r\n      <TodoList\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        completedTodos={completedTodos}\r\n        setEditText={setEditText}\r\n        editText={editText}\r\n        setDisableInputButton={setDisableInputButton}\r\n        disableInputButton={disableInputButton}\r\n        setCounter={setCounter}\r\n        counter={counter}\r\n      />\r\n      <div className=\"end\">\r\n        The End!\r\n      </div>\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport  { createGlobalStyle } from 'styled-components';\r\n\r\nconst Global = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n`\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  // <React.StrictMode>\r\n  <>\r\n    <Global />\r\n    <App />\r\n  </>\r\n  // </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}