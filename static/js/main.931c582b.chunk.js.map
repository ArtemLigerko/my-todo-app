{"version":3,"sources":["store/statisticReducer.js","components/TodoInputBar.js","components/Todo.js","components/TodoList.js","components/Statistic.js","App.js","store/index.js","index.js"],"names":["defaultState","counterCreated","counterUpdated","counterDeleted","addCreateCountAction","payload","type","addDeleteCountAction","TodoInputForm","styled","div","_templateObject","Object","taggedTemplateLiteral","InputTodoBar","input","_templateObject2","AddTodoButton","button","_templateObject3","OptionButtonsWrapper","_templateObject4","OptionButtons","_templateObject5","AddFromServerButton","_templateObject6","ClearAllButton","_templateObject7","FilterTodoSelector","select","_templateObject8","TodoInputBar","_ref","inputText","setInputText","todos","setTodos","setStatus","disableInputButton","setCounter","counter","dispatch","useDispatch","submitHandler","e","preventDefault","concat","toConsumableArray","text","id","Math","random","completed","edit","disableButtons","colorId","round","react_default","a","createElement","value","onChange","target","onKeyPress","key","placeholder","onClick","disabled","fetch","then","response","json","getTodos","map","item","isCompleted","floor","length","TodoLine","Todo_templateObject","UpDownTodoButtonsWrapper","Todo_templateObject2","DownTodoButton","Todo_templateObject3","UpTodoButton","Todo_templateObject4","TodoTextArea","li","Todo_templateObject5","props","randColor","TodoButtons","Todo_templateObject6","DoneTodoButton","Todo_templateObject7","disabledTheme","DelTodoButton","Todo_templateObject8","EditTodoButton","_templateObject9","TodoEditInput","_templateObject10","Todo","todo","setEditText","editText","setDisableInputButton","indexOf","slice","splice","defaultValue","objectSpread","filter","el","TodoListWrapper","ul","TodoList_templateObject","TodoList","completedTodos","components_Todo","StatisticBar","Statistic_templateObject","Statistic","useSelector","state","statistic","Head","h1","App_templateObject","AppWrapper","App_templateObject2","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","status","_useState7","_useState8","setCompletedTodos","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","counterLocal","components_TodoInputBar","components_Statistic","components_TodoList","rootReducer","combineReducers","arguments","undefined","action","todoReducer","store","createStore","Global","createGlobalStyle","src_templateObject","ReactDOM","createRoot","document","getElementById","render","Fragment","es","src_App"],"mappings":"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","file":"static/js/main.931c582b.chunk.js","sourcesContent":["const defaultState = {\r\n  counterCreated: 0,\r\n  counterUpdated: 0,\r\n  counterDeleted: 0,\r\n}\r\n\r\nconst CREATE_COUNT = \"CREATE_COUNT\";\r\nconst UPDATE_COUNT = \"UPDATE_COUNT\";\r\nconst DELETE_COUNT = \"DELETE_COUNT\";\r\n\r\nexport const statisticReducer = (state = defaultState, action) => {  // action = {type: \"\", payload: \"?\"}\r\n  switch (action.type) {\r\n    case CREATE_COUNT:\r\n      return { ...state, counterCreated: state.counterCreated + action.payload }\r\n    case UPDATE_COUNT:\r\n      return { ...state, counterUpdated: state.counterUpdated + action.payload }\r\n    case DELETE_COUNT:\r\n      return { ...state, counterDeleted: state.counterDeleted + action.payload }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addCreateCountAction = (payload) => ({type: CREATE_COUNT, payload});\r\nexport const addUpdateCountAction = (payload) => ({type: UPDATE_COUNT, payload});\r\nexport const addDeleteCountAction = (payload) => ({type: DELETE_COUNT, payload});\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport '../App.css';\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\nimport { addCreateCountAction, addUpdateCountAction, addDeleteCountAction } from \"../store/statisticReducer\";\r\n\r\n//Style:\r\nconst TodoInputForm = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n    border: none;\r\n`\r\nconst InputTodoBar = styled.input`\r\n    font-size: 1.2rem;\r\n    margin-bottom: 10px;\r\n    padding-left: 10px;\r\n    width: 400px;\r\n    height: 40px;\r\n    border-style: none;\r\n    border-radius: 5px 0 0 5px;\r\n    /* border: none; */\r\n    background-color: white;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\nconst AddTodoButton = styled.button`\r\n    font-size: 1.2rem;\r\n    /* line-height: 0; */\r\n    padding: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: rgb(255, 175, 25);\r\n    /* border: rgb(252, 218, 155) solid 1px; */\r\n    border: none;\r\n    border-radius: 0 5px 5px 0;\r\n    color: rgb(130, 130, 130);\r\n    cursor: pointer;\r\n`\r\nconst OptionButtonsWrapper = styled.div`\r\n    display: flex;\r\n`\r\nconst OptionButtons = styled.button`\r\n    font-size: 1rem;\r\n    margin-right: 5px;\r\n    width: 80px;\r\n    height: 40px;\r\n    background-color: rgb(253, 197, 93);\r\n    border-radius: 5px;\r\n    /* border: rgb(252, 218, 155) solid 1px; */\r\n    border: none;\r\n    color: rgb(130, 130, 130);\r\n    cursor: pointer;\r\n`\r\nconst AddFromServerButton = styled(OptionButtons)``\r\nconst ClearAllButton = styled(OptionButtons)``\r\nconst FilterTodoSelector = styled.select`\r\n    font-size: 1.2rem;\r\n    padding: 0.4rem;\r\n    margin-right: 5px;\r\n    height: 40px;\r\n    color: rgb(130, 130, 130);\r\n    background-color: rgb(253, 197, 93);\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\nfunction TodoInputBar({ inputText, setInputText, todos, setTodos, setStatus,\r\n    disableInputButton, setCounter, counter }) {\r\n\r\n    const dispatch = useDispatch();  //Redux\r\n    //const counterCreated = useSelector(state => state.statistic.counterCreated); //Redux\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( addCreateCountAction(1) );  //Redux\r\n\r\n        setCounter({\r\n            counterCreated: counter.counterCreated + 1,\r\n            counterUpdated: counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted,\r\n        })\r\n        setTodos([\r\n            ...todos,\r\n            {\r\n                text: inputText,\r\n                id: Math.random() * 1000,\r\n                completed: false,\r\n                edit: false,\r\n                disableButtons: false,\r\n                colorId: Math.round(Math.random() * 10),\r\n            }\r\n        ]);\r\n        setInputText(\"\");\r\n    }\r\n\r\n    const handleClearTodos = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch( addDeleteCountAction(todos.length) );  //Redux\r\n\r\n        setCounter({\r\n            counterCreated: counter.counterCreated,\r\n            counterUpdated: counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted + todos.length,\r\n        });\r\n        setTodos([]);\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    const handleFetchTodos = (e) => {\r\n        e.preventDefault();\r\n        let url = 'https://gist.githubusercontent.com/alexandrtovmach/0c8a29b734075864727228c559fe9f96/raw/c4e4133c9658af4c4b3474475273b23b4a70b4af/todo-task.json'\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(getTodos => {\r\n                setTodos([\r\n                    ...todos,\r\n                    ...getTodos.map(item => {\r\n                        return {\r\n                            text: item.text,\r\n                            id: Math.random() * 1000,\r\n                            completed: item.isCompleted,\r\n                            edit: false,\r\n                            disableButtons: false,\r\n                            colorId: Math.floor(Math.random() * 10),\r\n                        }\r\n                    })\r\n                ]);\r\n\r\n                dispatch( addCreateCountAction(getTodos.length) );  //Redux\r\n\r\n                setCounter({\r\n                    counterCreated: counter.counterCreated + getTodos.length,\r\n                    counterUpdated: counter.counterUpdated,\r\n                    counterDeleted: counter.counterDeleted,\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <TodoInputForm>\r\n            <div>\r\n                <InputTodoBar\r\n                    value={inputText}\r\n                    onChange={inputTextHandler}\r\n                    onKeyPress={e => {\r\n                        if (e.key === 'Enter') { submitHandler(e); }\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"type you task...\"\r\n                />\r\n                <AddTodoButton\r\n                    onClick={submitHandler}\r\n                    type=\"submit\"\r\n                    disabled={disableInputButton}\r\n                >\r\n                    +\r\n                </AddTodoButton>\r\n\r\n            </div>\r\n            <OptionButtonsWrapper>\r\n                <AddFromServerButton onClick={handleFetchTodos}>\r\n                    add from server\r\n                </AddFromServerButton>\r\n                <ClearAllButton onClick={handleClearTodos}>\r\n                    clear all\r\n                </ClearAllButton>\r\n                <FilterTodoSelector onChange={statusHandler}>\r\n                    <option>All</option>\r\n                    <option>Completed</option>\r\n                    <option>Uncompleted</option>\r\n                </FilterTodoSelector>\r\n            </OptionButtonsWrapper>\r\n        </TodoInputForm>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoInputBar;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUpdateCountAction, addDeleteCountAction } from \"../store/statisticReducer\";\r\n\r\n//Style:\r\nconst TodoLine = styled.div`\r\n    display: flex;\r\n    padding: 0.5rem 0;\r\n    font-size: 1.2rem;\r\n    border-style: none;\r\n`\r\nconst UpDownTodoButtonsWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst DownTodoButton = styled.button`\r\n    font-size: 1rem;\r\n    width: 2.2rem;\r\n    height: 1rem;\r\n    background-color: rgb(155, 218, 255);\r\n    border: rgb(252, 218, 155) solid;\r\n    border-width: 1px 0 1px 0;\r\n    border-radius: 5px;\r\n    color: rgb(120, 120, 120);\r\n    cursor: pointer;\r\n    line-height: 2px;\r\n`\r\nconst UpTodoButton = styled(DownTodoButton)`\r\n    transform: rotate(180deg);\r\n`\r\nconst TodoTextArea = styled.li`\r\n    padding: 0.3rem;\r\n    margin: 0 5px;\r\n    width: 400px;\r\n    list-style-type: none;\r\n    text-align: left;\r\n    font-size: 1.2rem;\r\n    border-radius: 5px;\r\n    text-decoration-line: ${props => props.completed ? 'line-through' : 'none'};\r\n    ${'' /* color: ${props => props.completed ? 'rgb(180, 180, 180)' : 'black'}; */}\r\n    ${'' /* background-color: ${props => props.completed ? 'rgb(180, 255, 212)' : 'white'}; */}\r\n    background-color: ${props => {\r\n        switch (props.randColor) {\r\n            case 0: return \"#FFE4C4\";\r\n            case 1: return \"#FFDEAD\";\r\n            case 2: return \"#DEB887\";\r\n            case 3: return \"#BC8F8F\"; //font-white\r\n            case 4: return \"#DAA520\";\r\n            case 5: return \"#B8860B\";\r\n            case 6: return \"#D2691E\";\r\n            case 7: return \"#8B4513\";\r\n            case 8: return \"#A0522D\";\r\n            case 9: return \"#A52A2A\";\r\n        }\r\n    }};\r\n    color: ${props => {\r\n        switch (props.randColor) {\r\n            case 0: return \"black\";\r\n            case 1: return \"black\";\r\n            case 2: return \"black\";\r\n            case 3: return \"white\"; //font-white\r\n            case 4: return \"white\";\r\n            case 5: return \"white\";\r\n            case 6: return \"white\";\r\n            case 7: return \"white\";\r\n            case 8: return \"white\";\r\n            case 9: return \"white\";\r\n        }\r\n    }};\r\n\r\n`\r\nconst TodoButtons = styled.button`\r\n    font-size: 1rem;\r\n    width: 2.2rem;\r\n    height: 2rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    margin-right: 2px;\r\n`\r\nconst DoneTodoButton = styled(TodoButtons)`\r\n    color: ${props => props.disabledTheme ? 'rgb(180, 180, 180)' : 'rgb(120, 120, 120)'};\r\n    background-color: ${props => props.disabledTheme ? 'rgb(230, 230, 230)' : 'rgb(100, 255, 212)'};\r\n    \r\n`\r\nconst DelTodoButton = styled(TodoButtons)`\r\n    color: ${props => props.disabledTheme ? 'rgb(180, 180, 180)' : 'rgb(120, 120, 120)'};\r\n    background-color: ${props => props.disabledTheme ? 'rgb(230, 230, 230)' : 'rgb(255, 144, 100)'};\r\n\r\n`\r\nconst EditTodoButton = styled(TodoButtons)`\r\n    width: 3rem;\r\n    color: ${props => props.disabledTheme ? 'rgb(180, 180, 180)' : 'rgb(120, 120, 120)'};\r\n    background-color: ${props => props.disabledTheme ? 'rgb(230, 230, 230)' : 'rgb(255, 175, 25)'};\r\n`\r\n\r\nconst TodoEditInput = styled.input`\r\n    padding: 0.3rem;\r\n    margin: 0 5px;\r\n    width: 400px;\r\n    height: 32px;\r\n    font-size: 1.2rem;\r\n    border-style: dotted;\r\n    border-width: 1.8px;\r\n    border-radius: 5px;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\nconst Todo = ({ text, todos, setTodos, todo, setEditText, editText,\r\n    setDisableInputButton, disableInputButton, setCounter, counter }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n\r\n        dispatch( addDeleteCountAction(1) );  //Redux\r\n\r\n        setCounter({\r\n            counterCreated: counter.counterCreated,\r\n            counterUpdated: counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted + 1,\r\n        })\r\n\r\n    }\r\n\r\n    const completedHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        setEditText(todo.text);\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item,\r\n                    edit: !item.edit,\r\n                    text: todo.edit ? editText : todo.text,\r\n                }\r\n            }\r\n            if (item.id !== todo.id) {\r\n                return {\r\n                    ...item,\r\n                    disableButtons: !item.disableButtons,\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n        setDisableInputButton(!disableInputButton);\r\n\r\n        dispatch( addUpdateCountAction(editText !== todo.text && todo.edit ? 1 : 0) );  //Redux\r\n\r\n        setCounter({\r\n            counterCreated: counter.counterCreated,\r\n            counterUpdated: editText !== todo.text && todo.edit ? counter.counterUpdated + 1 : counter.counterUpdated,\r\n            counterDeleted: counter.counterDeleted,\r\n        });\r\n\r\n        // editText !== todo.text ? console.log(true) : console.log(false);\r\n    }\r\n\r\n    const inputEditTextHandler = (e) => {\r\n        setEditText(e.target.value);\r\n    }\r\n\r\n    const handleTodoMoveUp = () => {\r\n        if (todos.indexOf(todo) > 0) {\r\n            setTodos(todos.slice(\r\n                todos.splice(\r\n                    (todos.indexOf(todo) - 1), 2,\r\n                    todos[todos.indexOf(todo)],\r\n                    todos[todos.indexOf(todo) - 1]\r\n                )\r\n            ));\r\n        }\r\n    }\r\n\r\n    const handleTodoMoveDown = () => {\r\n        if (todos.indexOf(todo) < todos.length - 1) {\r\n            setTodos(todos.slice(\r\n                todos.splice(\r\n                    (todos.indexOf(todo)), 2,\r\n                    todos[todos.indexOf(todo) + 1],\r\n                    todos[todos.indexOf(todo)]\r\n                )\r\n            ));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TodoLine>\r\n            <UpDownTodoButtonsWrapper>\r\n                <UpTodoButton onClick={handleTodoMoveUp}>\r\n                    <b>v</b>\r\n                </UpTodoButton>\r\n                <DownTodoButton onClick={handleTodoMoveDown}>\r\n                    <b>v</b>\r\n                </DownTodoButton>\r\n            </UpDownTodoButtonsWrapper>\r\n            {\r\n                todo.edit ?\r\n                    <TodoEditInput\r\n                        type=\"text\"\r\n                        defaultValue={text}\r\n                        onChange={inputEditTextHandler}\r\n                        // onKeyPress={e => {\r\n                        //     if (e.key === 'Enter') { console.log('Edit') }\r\n                        // }}\r\n\r\n                    /> :\r\n                    //<li className={todo.completed ? \"todoCompleted\" : \"\"}>{text}</li>\r\n                    <TodoTextArea\r\n                        completed={todo.completed}\r\n                        randColor={todo.colorId}\r\n                    >\r\n                        {text}\r\n                    </TodoTextArea>\r\n            }\r\n            <DoneTodoButton\r\n                onClick={completedHandler}\r\n                disabled={todo.disableButtons || todo.edit}\r\n                disabledTheme={todo.disableButtons || todo.edit}>\r\n                <b>V</b>\r\n            </DoneTodoButton>\r\n\r\n            <DelTodoButton\r\n                onClick={deleteHandler}\r\n                disabled={todo.disableButtons || todo.edit}\r\n                disabledTheme={todo.disableButtons || todo.edit}>\r\n                <b>X</b>\r\n            </DelTodoButton>\r\n\r\n            <EditTodoButton\r\n                onClick={handleEditClick}\r\n                disabled={todo.disableButtons}\r\n                disabledTheme={todo.disableButtons}>\r\n                <b>{todo.edit ? 'save' : 'edit'}</b>\r\n            </EditTodoButton>\r\n\r\n        </TodoLine>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from './Todo'\r\nimport styled from 'styled-components';\r\n\r\nconst TodoListWrapper = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: left;\r\n    padding: 0;\r\n    margin: 10px 0;\r\n`\r\n\r\nfunction TodoList({\r\n    todos, setTodos, completedTodos, setEditText, editText, \r\n    setDisableInputButton, disableInputButton, setCounter, counter }) {\r\n    return (\r\n        <div>\r\n            <TodoListWrapper>\r\n                {completedTodos.map((todo) => (\r\n                    <Todo\r\n                        text={todo.text}\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                        setEditText={setEditText}\r\n                        editText={editText}\r\n                        setDisableInputButton={setDisableInputButton}\r\n                        disableInputButton={disableInputButton}\r\n                        setCounter={setCounter}\r\n                        counter={counter}\r\n                    />\r\n                ))}\r\n            </TodoListWrapper>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst StatisticBar = styled.div`\r\n  color: rgb(130, 130, 130);\r\n`\r\n\r\n\r\n\r\nfunction Statistic({ counter }) {\r\n\r\n    //Redux. Start\r\n    const counterCreated = useSelector(state => state.statistic.counterCreated)\r\n    const counterUpdated = useSelector(state => state.statistic.counterUpdated)\r\n    const counterDeleted = useSelector(state => state.statistic.counterDeleted)\r\n    //Redux. End\r\n\r\n    return (\r\n        <StatisticBar>\r\n            <div>\r\n                <b>Statistic: </b>\r\n                created: {counter.counterCreated};\r\n                updated: {counter.counterUpdated};\r\n                deleted: {counter.counterDeleted};\r\n            </div>\r\n            <div>\r\n                <b>Statistic (redux): </b>\r\n                created: {counterCreated};\r\n                updated: {counterUpdated};\r\n                deleted: {counterDeleted};\r\n            </div>\r\n        </StatisticBar>\r\n    )\r\n}\r\n\r\nexport default Statistic;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport './App.css';\r\n// import components\r\nimport TodoInputBar from './components/TodoInputBar';\r\nimport TodoList from './components/TodoList';\r\nimport Statistic from './components/Statistic';\r\n\r\n//Style:\r\nconst Head = styled.h1`\r\n  color: rgb(255, 255, 255);\r\n  font-size: 3rem;\r\n  margin: 30px 0px 30px;\r\n`\r\nconst AppWrapper = styled.div`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  background-color: rgb(252, 218, 155);\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"All\");\r\n  const [completedTodos, setCompletedTodos] = useState([]);\r\n  const [editText, setEditText] = useState('');\r\n  const [disableInputButton, setDisableInputButton] = useState(false);\r\n  const [counter, setCounter] = useState({\r\n    counterCreated: 0,\r\n    counterUpdated: 0,\r\n    counterDeleted: 0,\r\n  })\r\n\r\n\r\n  //RUN ONCE when the app starts\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n\r\n  // Use Effect\r\n  useEffect(() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case \"Completed\":\r\n        setCompletedTodos(todos.filter(item => item.completed === true));\r\n        break;\r\n      case \"Uncompleted\":\r\n        setCompletedTodos(todos.filter(item => item.completed === false));\r\n        break;\r\n      default:\r\n        setCompletedTodos(todos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Save to local\r\n  // 01:23:00\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    localStorage.setItem(\"counter\", JSON.stringify(counter));\r\n  };\r\n\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoLocal);\r\n    }\r\n\r\n    if (localStorage.getItem(\"counter\") === null) {\r\n      localStorage.setItem(\"counter\", JSON.stringify({}));\r\n    } else {\r\n      let counterLocal = JSON.parse(localStorage.getItem(\"counter\"));\r\n      setCounter(counterLocal);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <AppWrapper>\r\n      <header>\r\n        <Head>\r\n          Artem's Todo App\r\n        </Head>\r\n      </header>\r\n      <TodoInputBar\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        setStatus={setStatus}\r\n        disableInputButton={disableInputButton}\r\n        setCounter={setCounter}\r\n        counter={counter}\r\n      />\r\n      <Statistic\r\n        counter={counter}\r\n        setCounter={setCounter}\r\n      />\r\n      <TodoList\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        completedTodos={completedTodos}\r\n        setEditText={setEditText}\r\n        editText={editText}\r\n        setDisableInputButton={setDisableInputButton}\r\n        disableInputButton={disableInputButton}\r\n        setCounter={setCounter}\r\n        counter={counter}\r\n      />\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers} from \"redux\";\r\nimport { statisticReducer } from \"./statisticReducer\";\r\nimport { todoReducer } from \"./todoReducer\"\r\n// import { composeWithDevTools } from \"redux-devtools-extention\";\r\n\r\nconst rootReducer = combineReducers({\r\n    statistic: statisticReducer,\r\n    todo: todoReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n \r\nconst Global = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n`\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  // <React.StrictMode>\r\n  <>\r\n    <Provider store={store}> {/* для связи react-компонента с redux */}\r\n      <Global />\r\n      <App />\r\n    </Provider>\r\n  </>\r\n  // </React.StrictMode>\r\n);\r\n\r\n "],"sourceRoot":""}